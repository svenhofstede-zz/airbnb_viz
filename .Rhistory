,"host_about"
,"host_response_rate"
,"host_acceptance_rate"
,"host_is_superhost"
,"host_picture_url"
,"property_type"
,"accommodates"
,"bathrooms"
,"beds"
,"bed_type"
,"weekly_price"
,"monthly_price"
,"review_scores_rating"
,"review_scores_accurracy"
,"review_scores_cleanliness"
,"review_scores_checkin"
,"review_scores_communication"
,"review_scores_location"
,"review_scores_value"
)]
air_final <- subset(air_merged, select =
"ID"
,"Listing.Name"
,"Host.ID"
,"Host.Name"
,"Borough"
,"Neighborhood"
,"Latitude"
,"Longitude"
,"Room.Type"
,"Price"
,"Min.Nights"
,"Number.of.Reviews"
,"Last.Review"
,"Reviews.Per.Month"
,"Listings.Per.Host"
,"Days.Available"
,"distSubway"
,"distAttractions"
,"closestAttraction"
,"listing_url"
,"summary"
,"space"
,"description"
,"picture_url"
,"host_since"
,"host_about"
,"host_response_rate"
,"host_acceptance_rate"
,"host_is_superhost"
,"host_picture_url"
,"property_type"
,"accommodates"
,"bathrooms"
,"beds"
,"bed_type"
,"weekly_price"
,"monthly_price"
,"review_scores_rating"
,"review_scores_accurracy"
,"review_scores_cleanliness"
,"review_scores_checkin"
,"review_scores_communication"
,"review_scores_location"
,"review_scores_value"
)
air_final <- subset(air_merged, select = c(
"ID"
,"Listing.Name"
,"Host.ID"
,"Host.Name"
,"Borough"
,"Neighborhood"
,"Latitude"
,"Longitude"
,"Room.Type"
,"Price"
,"Min.Nights"
,"Number.of.Reviews"
,"Last.Review"
,"Reviews.Per.Month"
,"Listings.Per.Host"
,"Days.Available"
,"distSubway"
,"distAttractions"
,"closestAttraction"
,"listing_url"
,"summary"
,"space"
,"description"
,"picture_url"
,"host_since"
,"host_about"
,"host_response_rate"
,"host_acceptance_rate"
,"host_is_superhost"
,"host_picture_url"
,"property_type"
,"accommodates"
,"bathrooms"
,"beds"
,"bed_type"
,"weekly_price"
,"monthly_price"
,"review_scores_rating"
,"review_scores_accurracy"
,"review_scores_cleanliness"
,"review_scores_checkin"
,"review_scores_communication"
,"review_scores_location"
,"review_scores_value"
))
View(air_merged)
air_final <- subset(air_merged, select = c(
"ID"
,"Listing.Name"
,3
,4
,"Borough"
,"Neighborhood"
,"Latitude"
,"Longitude"
,"Room.Type"
,"Price"
,"Min.Nights"
,"Number.of.Reviews"
,"Last.Review"
,"Reviews.Per.Month"
,"Listings.Per.Host"
,"Days.Available"
,"distSubway"
,"distAttractions"
,"closestAttraction"
,"listing_url"
,"summary"
,"space"
,"description"
,"picture_url"
,"host_since"
,"host_about"
,"host_response_rate"
,"host_acceptance_rate"
,"host_is_superhost"
,"host_picture_url"
,"property_type"
,"accommodates"
,"bathrooms"
,"beds"
,"bed_type"
,"weekly_price"
,"monthly_price"
,"review_scores_rating"
,"review_scores_accurracy"
,"review_scores_cleanliness"
,"review_scores_checkin"
,"review_scores_communication"
,"review_scores_location"
,"review_scores_value"
))
air_final <- subset(air_merged, select = c(
1
,2
,3
,4
,5
,6
,7
,8
,9
,10
,11
,12
,13
,14
,15
,16
,17
,18
,19
,"listing_url"
,"summary"
,"space"
,"description"
,"picture_url"
,"host_since"
,"host_about"
,"host_response_rate"
,"host_acceptance_rate"
,"host_is_superhost"
,"host_picture_url"
,"property_type"
,"accommodates"
,"bathrooms"
,"beds"
,"bed_type"
,"weekly_price"
,"monthly_price"
,"review_scores_rating"
,"review_scores_accurracy"
,"review_scores_cleanliness"
,"review_scores_checkin"
,"review_scores_communication"
,"review_scores_location"
,"review_scores_value"
))
View(air_merged)
air_final <- air_merged$scrape_id = NULL
air_merged <- air_merged$scrape_id = NULL
air_merged$scrape_id = NULL
air_merged$last_scraped = NULL
air_merged$host_id = NULL
air_merged$host_url = NULL
air_merged$host_name = NULL
air_merged$host_location = NULL
air_merged$host_response_time = NULL
air_merged$street = NULL
air_merged$neighbourhood = NULL
air_merged$neighbourhood_cleansed = NULL
air_merged$neighbourhood_group_cleansed = NULL
air_merged$city = NULL
air_merged$state = NULL
air_merged$zipcode = NULL
air_merged$market = NULL
air_merged$country = NULL
air_merged$latitude = NULL
air_merged$longitude = NULL
air_merged$is_location_exact = NULL
air_merged$room_type = NULL
air_merged$bedrooms = NULL
air_merged$square_feet = NULL
air_merged$guests_included = NULL
air_merged$extra_people = NULL
air_merged$minimum_nights = NULL
air_merged$maximum_nights = NULL
air_merged$calendar_updated = NULL
air_merged$availability_30 = NULL
air_merged$availability_60 = NULL
air_merged$availability_90 = NULL
air_merged$availability_365 = NULL
air_merged$calendar_last_scraped = NULL
air_merged$number_of_reviews = NULL
air_merged$requires_license = NULL
air_merged$license = NULL
air_merged$jurisdiction_names = NULL
air_merged$calculated_host_listings_count = NULL
air_merged$reviews_per_month = NULL
View(air_merged)
View(earth.dist)
View(air_merged)
rename(air_merged,c("ID","id"))
write.csv(air_merged, file="listings_final.csv")
freqfunc <- function(x, n){
tail(sort(table(unlist(strsplit(as.character(x), ", ")))), n)
}
freqfunc(air_merged$description, 5)
freqfunc(air_merged$space, 5)
freqfunc(air_merged$summary, 10 )
freqfunc(subset(air_merged$summary,air$closestAttraction = "Empire State Building"), 10 )
freqfunc(
subset(
air_merged, air$closestAttraction = "Empire State Building"
),
10 )
freqfunc(
subset(
air_merged, air$closestAttraction = "Empire State Building", select=c(summary)
),
10 )
freqfunc(subset(air_merged, air$closestAttraction = "Empire State Building", select=c(summary)), 10 )
freqfunc(subset(air_merged, air_merged$closestAttraction = "Empire State Building", select=c(summary)), 10 )
freqfunc(subset(air_merged, air_merged$closestAttraction == "Empire State Building", select=c(summary)), 10 )
freqfunc(subset(air_merged, air_merged$closestAttraction == "Empire State Building", select=c(air_merged$summary)), 10 )
empire_state <- subset(air_merged, air_merged$closestAttraction == "Empire State Building", select=c(air_merged$summary)
)
empire_state <- subset(air_merged, air_merged$closestAttraction == "Empire State Building", select=c(summary)
)
freqfunc(empire_state, 10)
empire_state <- subset(air_merged, air_merged$closestAttraction == "Empire State Building", select=c(air_merged$description)
)
empire_state <- subset(air_merged, air_merged$closestAttraction == "Empire State Building", select=c(description)
)
View(empire_state)
freqfunc(empire_state, 10)
freqfunc(empire_state, 5)
str(empire_state)
rm(empire_state)
empire_state <- subset(air_merged, air_merged$closestAttraction == "Empire State Building", select=c(description))
View(empire_state)
freqfunc(empire_state$description, 10)
freqfunc(empire_state$description, 15)
empire_state <- subset(air_merged, air_merged$closestAttraction == "Empire State Building" & air_merged$distAttractions < 1, select=c(description))
freqfunc(empire_state$description, 15)
freqfunc(empire_state$description, 10)
freqfunc(empire_state$description, 5)
empire_state <- subset(air_merged, air_merged$distAttractions < 0.5, select=c(description))
freqfunc(empire_state, 10)
freqfunc(empire_state$description, 10)
freqfunc(empire_state$description, 5)
for (i in 1:nrow(air)){
distance <- 999
closest_attraction <- NULL
count_1km_attractions <- 0
lat_air <- air[i,"Latitude"]
long_air <- air[i,"Longitude"]
for(j in 1:nrow(attractions)){
dist <- earth.dist(long_air,lat_air,attractions[j,"longitude"],attractions[j,"latitude"])
if(dist <= 1){
count_1km_attractions = count_1km_attractions + 1
}
if(dist < distance){
distance <- dist
closest_attraction <- attractions[j,"attraction"]
}
}
print(i)
flush.console()
air_merged[i,"distAttractions"] <- distance
air_merged[i,"closestAttraction"] <- closest_attraction
air_merged[i,"count_1km_attractions"] <- count_1km_attractions
}
View(air_merged)
write.csv(air_merged, file="listings_final.csv")
for (i in 1:nrow(air_merged)){
distance <- 999
closest_attraction <- NULL
count_1km_attractions <- 0
lat_air <- air_merged[i,"Latitude"]
long_air <- air_merged[i,"Longitude"]
for(j in 1:nrow(attractions)){
dist <- earth.dist(long_air,lat_air,attractions[j,"longitude"],attractions[j,"latitude"])
if(dist <= 1){
count_1km_attractions = count_1km_attractions + 1
}
if(dist < distance){
distance <- dist
closest_attraction <- attractions[j,"attraction"]
}
}
print(i)
flush.console()
air_merged[i,"distAttractions"] <- distance
air_merged[i,"closestAttraction"] <- closest_attraction
air_merged[i,"count_1km_attractions"] <- count_1km_attractions
}
write.csv(air_merged, file="listings_final.csv")
debugSource('H:/Projects/vizwiz/scripts/addDistanceToTouristAttractions.R', echo=TRUE)
debugSource('H:/Projects/vizwiz/scripts/addDistanceToTouristAttractions.R', echo=TRUE)
debugSource('H:/Projects/vizwiz/scripts/addDistanceToTouristAttractions.R')
debugSource('H:/Projects/vizwiz/scripts/addDistanceToTouristAttractions.R')
for (i in 1:nrow(air_merged)){
distance <- 999
closest_attraction <- NULL
count_1km_attractions <- 0
lat_air <- air_merged[i,"Latitude"]
long_air <- air_merged[i,"Longitude"]
for(j in 1:nrow(attractions)){
dist <- earth.dist(long_air,lat_air,attractions[j,"longitude"],attractions[j,"latitude"])
if(dist < 1){
count_1km_attractions <- count_1km_attractions + 1
}
if(dist < distance){
distance <- dist
closest_attraction <- attractions[j,"attraction"]
}
}
print(i)
flush.console()
air_merged[i,"distAttractions"] <- distance
air_merged[i,"closestAttraction"] <- closest_attraction
air_merged[i,"count_1km_attractions"] <- count_1km_attractions
}
write.csv(air_merged, file="listings_final.csv")
View(air_merged)
num_6 <- 0
for (i in 1:nrow(air_merged)){
distance <- 999
closest_attraction <- NULL
count_1km_attractions <- 0
lat_air <- air_merged[i,"Latitude"]
long_air <- air_merged[i,"Longitude"]
for(j in 1:nrow(attractions)){
dist <- earth.dist(long_air,lat_air,attractions[j,"longitude"],attractions[j,"latitude"])
if(dist < 1){
count_1km_attractions <- count_1km_attractions + 1
}
if(dist < distance){
distance <- dist
closest_attraction <- attractions[j,"attraction"]
}
}
print(i)
flush.console()
#air_merged[i,"distAttractions"] <- distance
#air_merged[i,"closestAttraction"] <- closest_attraction
#air_merged[i,"count_1km_attractions"] <- count_1km_attractions
if(count_1km_attractions == 6){
num_6 <- num_6 + 1
}
}
print num_6
print(num_6)
debugSource('H:/Projects/vizwiz/scripts/addDistanceToTouristAttractions.R')
debugSource('H:/Projects/vizwiz/scripts/addDistanceToTouristAttractions.R')
debugSource('H:/Projects/vizwiz/scripts/addDistanceToTouristAttractions.R')
debugSource('H:/Projects/vizwiz/scripts/addDistanceToTouristAttractions.R')
for (i in 1:nrow(air_merged)){
distance <- 999
closest_attraction <- NULL
count_1km_attractions <- 0
lat_air <- air_merged[i,"Latitude"]
long_air <- air_merged[i,"Longitude"]
current <- air_merged[i,"ID"]
for(j in 1:nrow(attractions)){
dist <- earth.dist(long_air,lat_air,attractions[j,"longitude"],attractions[j,"latitude"])
if(dist < 2){
count_1km_attractions <- count_1km_attractions + 1
}
if(dist < distance){
distance <- dist
closest_attraction <- attractions[j,"attraction"]
}
}
print(count_1km_attractions)
print(i)
flush.console()
air_merged[i,"distAttractions"] <- distance
air_merged[i,"closestAttraction"] <- closest_attraction
air_merged[i,"count_1km_attractions"] <- count_1km_attractions
}
print(num_6)
write.csv(air_merged, file="listings_final.csv")
View(air_merged)
rm(empire_state)
rm(closest_attraction, count_1km_attractions, current, dist, distance, i, j, lat_air, long_air, num_6)
View(attractions)
freqfunc(air_merged$summary, 10 )
View(air_merged)
freqfunc(air_merged$host_about, 10 )
freqfunc(air_merged$space, 10 )
parking <- read.csv("parking.csv")
parking <- read.csv("source/parking.csv")
View(parking)
load("~/projects/airbnb_viz/.RData")
write.csv(parking,"parking_final.csv")
View(attractions)
View(parking)
parking$latitude <- round(parking$latitude, digits = 5)
parking$longitude <- round(parking$longitude, digits = 5)
write.csv(parking,"parking_final.csv")
View(parking)
str(parking)
str(attractions)
View(attractions)
wifi <- read.csv("source/wifi.csv")
View(wifi)
wifitest <- read.csv("source/test.csv")
View(wifitest)
wifi <- read.csv("source/test.csv")
rm(wifitest)
write.csv(wifi,"wifi.csv")
View(wifi)
str(wifi)
write.csv(wifi,"wifi.csv")
View(wifi)
View(wifi)
wifi
wifi$Lat
View(parking)
View(parking)
View(wifi)
for (i in 1:nrow(air_merged)){
distance <- 999
lat_air <- air_merged[i,"Latitude"]
long_air <- air_merged[i,"Longitude"]
for(j in 1:nrow(parking)){
dist <- earth.dist(long_air,lat_air,wifi[j,"long_"],wifi[j,"lat"])
if(dist < distance){
distance <- dist
}
}
print(i)
flush.console()
air_merged[i,"distWifi"] <- distance
}
for (i in 1:nrow(air_merged)){
distance <- 999
lat_air <- air_merged[i,"Latitude"]
long_air <- air_merged[i,"Longitude"]
for(j in 1:nrow(parking)){
dist <- earth.dist(long_air,lat_air,wifi[j,"Long_"],wifi[j,"Lat"])
if(dist < distance){
distance <- dist
}
}
print(i)
flush.console()
air_merged[i,"distWifi"] <- distance
}
for (i in 1:nrow(air_merged)){
distance <- 999
lat_air <- air_merged[i,"Latitude"]
long_air <- air_merged[i,"Longitude"]
for(j in 1:nrow(wifi)){
dist <- earth.dist(long_air,lat_air,wifi[j,"Long_"],wifi[j,"Lat"])
if(dist < distance){
distance <- dist
}
}
print(i)
flush.console()
air_merged[i,"distWifi"] <- distance
}
